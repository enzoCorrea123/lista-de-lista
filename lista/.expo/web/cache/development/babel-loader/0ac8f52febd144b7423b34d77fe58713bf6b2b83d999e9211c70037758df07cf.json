{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CreateListScreen = function CreateListScreen(_ref) {\n  var _route$params2;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    listName = _useState2[0],\n    setListName = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isEdit = _useState4[0],\n    setIsEdit = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listId = _useState6[0],\n    setListId = _useState6[1];\n  useEffect(function () {\n    var _route$params;\n    if ((_route$params = route.params) != null && _route$params.list) {\n      setListName(route.params.list.LISTNAME);\n      setListId(route.params.list.id);\n      setIsEdit(true);\n    }\n  }, [(_route$params2 = route.params) == null ? void 0 : _route$params2.list]);\n  var handleSave = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!listName.trim()) {\n        alert('Erro', 'Por favor, insira um nome para a lista.');\n        return;\n      }\n      try {\n        var storedLists = yield AsyncStorage.getItem('LIST');\n        var lists = storedLists ? JSON.parse(storedLists) : [];\n        if (isEdit) {\n          lists = lists.map(function (list) {\n            return list.id === listId ? _objectSpread(_objectSpread({}, list), {}, {\n              LISTNAME: listName\n            }) : list;\n          });\n        } else {\n          var newList = {\n            id: Date.now(),\n            LISTNAME: listName,\n            created: new Date().toISOString()\n          };\n          lists.push(newList);\n        }\n        yield AsyncStorage.setItem('LIST', JSON.stringify(lists));\n        navigation.goBack();\n      } catch (e) {\n        alert('Erro ao salvar a lista.', e);\n      }\n    });\n    return function handleSave() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nome da Lista\",\n      value: listName,\n      onChangeText: setListName\n    }), _jsx(Button, {\n      title: isEdit ? \"Salvar Alterações\" : \"Criar Lista\",\n      onPress: handleSave\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    padding: 10,\n    marginBottom: 20,\n    borderRadius: 5,\n    width: 300,\n    height: 25\n  }\n});\nexport default CreateListScreen;","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","Button","StyleSheet","Alert","AsyncStorage","jsx","_jsx","jsxs","_jsxs","CreateListScreen","_ref","_route$params2","navigation","route","_useState","_useState2","_slicedToArray","listName","setListName","_useState3","_useState4","isEdit","setIsEdit","_useState5","_useState6","listId","setListId","_route$params","params","list","LISTNAME","id","handleSave","_ref2","_asyncToGenerator","trim","alert","storedLists","getItem","lists","JSON","parse","map","_objectSpread","newList","Date","now","created","toISOString","push","setItem","stringify","goBack","e","apply","arguments","style","styles","container","children","input","placeholder","value","onChangeText","title","onPress","create","flex","padding","justifyContent","borderWidth","borderColor","marginBottom","borderRadius","width","height"],"sources":["C:/Users/Aluno/Documents/GitHub/lista-de-lista/lista/src/CreateListScreen/CreateList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, TextInput, Button, StyleSheet, Alert } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst CreateListScreen = ({ navigation, route }) => {\r\n  const [listName, setListName] = useState('');\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [listId, setListId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (route.params?.list) {\r\n      setListName(route.params.list.LISTNAME);\r\n      setListId(route.params.list.id);\r\n      setIsEdit(true);\r\n    }\r\n  }, [route.params?.list]);\r\n\r\n  const handleSave = async () => {\r\n    if (!listName.trim()) {\r\n        alert('Erro', 'Por favor, insira um nome para a lista.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const storedLists = await AsyncStorage.getItem('LIST');\r\n      let lists = storedLists ? JSON.parse(storedLists) : [];\r\n\r\n      if (isEdit) {\r\n        lists = lists.map(list => list.id === listId ? { ...list, LISTNAME: listName } : list);\r\n      } else {\r\n        const newList = { id: Date.now(), LISTNAME: listName, created: new Date().toISOString() };\r\n        lists.push(newList);\r\n      }\r\n\r\n      await AsyncStorage.setItem('LIST', JSON.stringify(lists));\r\n      navigation.goBack();\r\n    } catch (e) {\r\n      alert('Erro ao salvar a lista.', e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nome da Lista\"\r\n        value={listName}\r\n        onChangeText={setListName}\r\n      />\r\n      <Button\r\n        title={isEdit ? \"Salvar Alterações\" : \"Criar Lista\"}\r\n        onPress={handleSave}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    padding: 10,\r\n    marginBottom: 20,\r\n    borderRadius: 5,\r\n    width: 300,\r\n    height: 25\r\n  },\r\n});\r\n\r\nexport default CreateListScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
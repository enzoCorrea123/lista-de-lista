{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TopicScreen = function TopicScreen(_ref) {\n  var _route$params, _route$params3;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    topicName = _useState2[0],\n    setTopicName = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isEdit = _useState4[0],\n    setIsEdit = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    topicId = _useState6[0],\n    setTopicId = _useState6[1];\n  var listId = (_route$params = route.params) == null ? void 0 : _route$params.listId;\n  useEffect(function () {\n    var _route$params2;\n    if ((_route$params2 = route.params) != null && _route$params2.topic) {\n      setTopicName(route.params.topic.name);\n      setTopicId(route.params.topic.id);\n      setIsEdit(true);\n    }\n  }, [(_route$params3 = route.params) == null ? void 0 : _route$params3.topic]);\n  var handleSave = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!topicName.trim()) {\n        alert('Por favor, insira um nome para o tópico.');\n        return;\n      }\n      try {\n        var storedTopics = yield AsyncStorage.getItem(`topics_${listId}`);\n        var topics = storedTopics ? JSON.parse(storedTopics) : [];\n        var newTopic = {\n          id: Date.now(),\n          TOPICNAME: topicName,\n          LISTID: listId,\n          created: new Date().toLocaleString()\n        };\n        if (isEdit) {\n          topics = topics.map(function (t) {\n            return t.id === topicId ? newTopic : t;\n          });\n        } else {\n          topics.push(newTopic);\n        }\n        yield AsyncStorage.setItem(`topics_${listId}`, JSON.stringify(topics));\n        navigation.goBack();\n      } catch (e) {\n        alert('Erro ao salvar tópico', e);\n      }\n    });\n    return function handleSave() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nome do T\\xF3pico\",\n      value: topicName,\n      onChangeText: setTopicName\n    }), _jsx(Button, {\n      title: isEdit ? \"Salvar Alterações\" : \"Adicionar Tópico\",\n      onPress: handleSave\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    padding: 10,\n    marginBottom: 20,\n    borderRadius: 5\n  }\n});\nexport default TopicScreen;","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","Button","StyleSheet","Alert","AsyncStorage","jsx","_jsx","jsxs","_jsxs","TopicScreen","_ref","_route$params","_route$params3","navigation","route","_useState","_useState2","_slicedToArray","topicName","setTopicName","_useState3","_useState4","isEdit","setIsEdit","_useState5","_useState6","topicId","setTopicId","listId","params","_route$params2","topic","name","id","handleSave","_ref2","_asyncToGenerator","trim","alert","storedTopics","getItem","topics","JSON","parse","newTopic","Date","now","TOPICNAME","LISTID","created","toLocaleString","map","t","push","setItem","stringify","goBack","e","apply","arguments","style","styles","container","children","input","placeholder","value","onChangeText","title","onPress","create","flex","padding","justifyContent","borderWidth","borderColor","marginBottom","borderRadius"],"sources":["C:/Users/enzo_correa/Documents/GitHub/lista-de-lista/lista/src/CreateTopicScreen/CreateTopic.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, TextInput, Button, StyleSheet, Alert } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst TopicScreen = ({ navigation, route }) => {\r\n  const [topicName, setTopicName] = useState('');\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [topicId, setTopicId] = useState(null);\r\n  const listId = route.params?.listId;\r\n\r\n  useEffect(() => {\r\n    if (route.params?.topic) {\r\n      setTopicName(route.params.topic.name);\r\n      setTopicId(route.params.topic.id);\r\n      setIsEdit(true);\r\n    }\r\n  }, [route.params?.topic]);\r\n\r\n  const handleSave = async () => {\r\n    if (!topicName.trim()) {\r\n      alert('Por favor, insira um nome para o tópico.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n        const storedTopics = await AsyncStorage.getItem(`topics_${listId}`);\r\n        let topics = storedTopics ? JSON.parse(storedTopics) : [];\r\n  \r\n        const newTopic = {\r\n          id: Date.now(),\r\n          TOPICNAME: topicName, // Usando a chave TOPICNAME conforme definido no JSON\r\n          LISTID: listId,       // Associando o tópico à lista\r\n          created: new Date().toLocaleString()\r\n        };\r\n  \r\n        if (isEdit) {\r\n          topics = topics.map(t => t.id === topicId ? newTopic : t);//map com ternário\r\n        } else {\r\n          topics.push(newTopic);\r\n        }\r\n  \r\n        await AsyncStorage.setItem(`topics_${listId}`, JSON.stringify(topics));\r\n        navigation.goBack();\r\n      } catch (e) {\r\n        alert('Erro ao salvar tópico', e);\r\n      }\r\n    \r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nome do Tópico\"\r\n        value={topicName}\r\n        onChangeText={setTopicName}\r\n      />\r\n      <Button\r\n        title={isEdit ? \"Salvar Alterações\" : \"Adicionar Tópico\"}\r\n        onPress={handleSave}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    padding: 10,\r\n    marginBottom: 20,\r\n    borderRadius: 5,\r\n  },\r\n});\r\n\r\nexport default TopicScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}